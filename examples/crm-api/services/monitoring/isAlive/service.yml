name: Monitoring that server is alive
description: |
    It is a very simple service, 
    which makes possible to monitor that the server is running
    and is able to answer HTTP requests
style: OPERATION
uriTemplate: /monitoring/isAlive
methods:
    GET:
        summary: Is server alive?
        notes: Responses true if server is working
        implementation: monitoring.isAlive
        request:
            headers:
                -
                    field: Accept
                    content: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
                -
                    field: Accept-Encoding
                    content: "gzip, deflate"
        responses:
            -
                name: OK
                statusCode: &OkStatusCode 200
                reason: &OkReason Successful execution
                headers:
                    -
                        field: Content-Type
                        content: application/json
                # mockBody: getMonitoringIsAlive-responseBody.json
        testCases:
            -
                name: Get Monitoring Is Alive
                description: Successfully checks if server is alive
                url: /monitoring/isAlive
                template: testGetMethod.mustache
                request:
                    headers:
                        -
                            field: Accept
                            content: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
                        -
                            field: Accept-Encoding
                            content: "gzip, deflate"
                response:
                    name: OK
                    statusCode: *OkStatusCode
                    reason: *OkReason
                    headers:
                        -
                            field: Content-Type
                            content: application/json
